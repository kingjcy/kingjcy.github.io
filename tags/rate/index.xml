<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rate on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/rate/</link>
    <description>Recent content in Rate on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Sun, 10 Nov 2019 17:43:57 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/rate/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang使用系列---- Rate</title>
      <link>https://kingjcy.github.io/post/golang/go-rate/</link>
      <pubDate>Sun, 10 Nov 2019 17:43:57 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-rate/</guid>
      <description>&lt;p&gt;限流器是后台服务中的非常重要的组件，可以用来限制请求速率，保护服务，以免服务过载。限流器的实现方法有很多种，例如滑动窗口法、Token Bucket、Leaky Bucket等。&lt;/p&gt;

&lt;p&gt;其实golang标准库中就自带了限流算法的实现，即golang.org/x/time/rate。该限流器是基于Token Bucket(令牌桶)实现的。&lt;/p&gt;

&lt;p&gt;令牌桶就是想象有一个固定大小的桶，系统会以恒定速率向桶中放Token，桶满则暂时不放。而用户则从桶中取Token，如果有剩余Token就可以一直取。如果没有剩余Token，则需要等到系统中被放置了Token才行。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>