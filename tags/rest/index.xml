<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rest on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/rest/</link>
    <description>Recent content in Rest on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Wed, 06 Mar 2019 20:08:41 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/rest/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Webserver</title>
      <link>https://kingjcy.github.io/post/middleware/network/application-netprotocol/webserver/</link>
      <pubDate>Wed, 06 Mar 2019 20:08:41 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/network/application-netprotocol/webserver/</guid>
      <description>&lt;p&gt;目前知道的三种主流的Web服务实现方案为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;REST：表象化状态转变 (软件架构风格）
SOAP：简单对象访问协议 
XML-RPC：远程过程调用协议 
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Rest</title>
      <link>https://kingjcy.github.io/post/middleware/network/application-netprotocol/rest/</link>
      <pubDate>Sun, 05 Mar 2017 21:03:11 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/network/application-netprotocol/rest/</guid>
      <description>&lt;p&gt;REST &amp;ndash; REpresentational State Transfer 直接翻译：表现层状态转移。&lt;/p&gt;

&lt;p&gt;REST只是一组关于如何使用HTTP的规则规范，或者是一种设计风格，但并不是一个标准,只是提倡我们使用，所以业内认为REST是我们都应该使用HTTP的方式。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Resource：资源，即数据。
Representational：某种表现形式，比如用JSON，XML，JPEG等；
State Transfer：状态变化。通过HTTP动词实现。
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>