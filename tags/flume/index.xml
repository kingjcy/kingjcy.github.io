<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Flume on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/flume/</link>
    <description>Recent content in Flume on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Mon, 16 Jul 2018 20:41:47 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/flume/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flume</title>
      <link>https://kingjcy.github.io/post/log/collect/flume/flume/</link>
      <pubDate>Mon, 16 Jul 2018 20:41:47 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/log/collect/flume/flume/</guid>
      <description>Flume的数据流由事件（Event）贯穿始终。事件是Flume的基本数据单位，它携带日志数据（字节数组形式）并且携带有头信息，这些Event由Agent外部的Source生成，当Source捕获事件后会进行特定的格式化，然后Source会把事件推入（单个或多个）Channel中。可以把Channel看作是一个缓冲区，它将保存事件直到Sink处理完该事件。Sink负责持久化日志或者把事件推向另一个Source。以下是Flume的一些核心概念：
（3）Client：运行于一个独立线程，用于生产数据并将其发送给Agent。就是客户端，产生日志的服务。 （1）Events：一个数据单元，带有一个可选的消息头,可以是日志记录、avro 对象等。是flume的核心。
（2）Agent：JVM中一个独立的Flume进程，包含组件Source、Channel、Sink。 Source：监控Event,从Client收集数据，传递给Channel。 Channel：中转Event的一个临时存储，保存Source组件传递过来的Event，其实就是连接 Source 和 Sink ，有点像一个消息队列。 Sink：从Channel收集数据，运行在一个独立线程。进行数据处理
Flume提供了大量内置的Source、Channel和Sink类型。不同类型的Source、Channel和Sink可以自由组合。组合方式基于用户设置的配置文件，非常灵活。
flume的配置也是简洁明了。</description>
    </item>
    
  </channel>
</rss>