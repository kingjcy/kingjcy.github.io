<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Server on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/server/</link>
    <description>Recent content in Server on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Fri, 12 Apr 2019 09:57:35 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Connect</title>
      <link>https://kingjcy.github.io/post/middleware/network/application-netprotocol/connect/</link>
      <pubDate>Fri, 12 Apr 2019 09:57:35 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/network/application-netprotocol/connect/</guid>
      <description>&lt;p&gt;连接实际上是操作系统内核的一种数据结构，称为TCP控制块（TCB），对于linux而言是tcp_sock结构。不光连接，连数据包也是由一个数据结构来控制，linux里面称为sk_buff结构。完成三次握手就是连接，完成四次握手就是连接关闭。握手其实就是服务端和客户端都获取解析对方数据的方式（四元组是指&amp;lt;\source ip,source port,target ip,target port&amp;gt;。），放到对应的位置。这样两者就能一对一处理了，数据其实还是通过网卡传输的，但我只处理我认识的数据。这样比较好理解。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Server</title>
      <link>https://kingjcy.github.io/post/architecture/server/</link>
      <pubDate>Wed, 31 Jan 2018 19:15:53 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/server/</guid>
      <description>&lt;p&gt;应用服务的架构决定了服务的可用性，稳定性，扩展性，好的架构都是能够智能的自行容错与恢复。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux系列---- ssl</title>
      <link>https://kingjcy.github.io/post/linux/server/ssl/</link>
      <pubDate>Fri, 11 Aug 2017 09:29:43 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/linux/server/ssl/</guid>
      <description>&lt;p&gt;SSL：（Secure Socket Layer，安全套接字层），为Netscape所研发，用以保障在Internet上数据传输之安全，利用数据加密(Encryption)技术，可确保数据在网络上之传输过程中不会被截取。当前版本为3.0。它已被广泛地用于Web浏览器与服务器之间的身份认证和加密数据传输。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Iptables</title>
      <link>https://kingjcy.github.io/post/linux/server/iptables/</link>
      <pubDate>Tue, 29 Nov 2016 16:32:17 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/linux/server/iptables/</guid>
      <description>&lt;p&gt;防火墙是通过审查经过的每一个数据包，判断它是否有相匹配的过滤规则，根据规则的先后顺序进行一一比较，直到满足其中的一条规则为止，然后依据控制机制做出相应的动作。如果都不满足，则将数据包丢弃，从而保护网络的安全。目前防火墙有两种机制：一个是阻止传输流通过，一个是允许传输流通过。就是我们所说的过滤式的防火墙，还有就是代理服务器。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>