<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/code/</link>
    <description>Recent content in Code on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Mon, 05 Nov 2018 20:06:00 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Leetmeetcode 练习</title>
      <link>https://kingjcy.github.io/post/worklife/leetmeetcode/</link>
      <pubDate>Mon, 05 Nov 2018 20:06:00 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/worklife/leetmeetcode/</guid>
      <description>&lt;p&gt;多做题，多做算法，保持思路的可扩展，与数学的结合。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控系列---- zabbix源码阅读</title>
      <link>https://kingjcy.github.io/post/monitor/zabbix/zabbixcode/</link>
      <pubDate>Sat, 25 Nov 2017 09:52:47 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/zabbix/zabbixcode/</guid>
      <description>原理
流程 一个监控系统运行的大概的流程是这样的：
agentd需要安装到被监控的主机上，它负责定期收集各项数据，并发送到zabbix server端，zabbix server将数据存储到数据库中，zabbix web根据数据在前端进行展现和绘图。这里agentd收集数据分为主动和被动两种模式：
主动：agent请求server获取主动的监控项列表，并主动将监控项内需要检测的数据提交给server/proxy
被动：server向agent请求获取监控项的数据，agent返回数据。
主动监测 通信过程如下：
zabbix首先向ServerActive配置的IP请求获取active items，获取并提交active tiems数据值server或者proxy。很多人会提出疑问：zabbix多久获取一次active items？它会根据配置文件中的RefreshActiveChecks的频率进行，如果获取失败，那么将会在60秒之后重试。分两个部分：
1.获取ACTIVE ITEMS列表
Agent打开TCP连接（主动检测变成Agent打开） Agent请求items检测列表 Server返回items列表 Agent 处理响应 关闭TCP连接 Agent开始收集数据  主动检测提交数据过程如下：
Agent建立TCP连接 Agent提交items列表收集的数据 Server处理数据，并返回响应状态 关闭TCP连接  被动监测 通信过程如下：
Server打开一个TCP连接 Server发送请求agent.ping\n Agent接收到请求并且响应&amp;lt;HEADER&amp;gt;&amp;lt;DATALEN&amp;gt;1 Server处理接收到的数据1 关闭TCP连接  这里，有人可以看出来，被动模式每次都需要打开一个tcp连接，这样当监控项越来越多时，就会出现server端性能问题了。
not supported items通信过程
● Server打开一个TCP连接 ● Server发送请求vfs.fs.size[ no]\n ● Agent接收请求并且返回响应数据 &amp;lt;HEADER&amp;gt;&amp;lt;DATALEN&amp;gt;ZBX_NOTSUPPORTED\0Cannot obtain filesystem information: [2] No such file or directory ● Server接收并处理数据, 将item的状态改为“ not supported ” ● 关闭TCP连接  还有人会问，那实际监控中是用主动的还是被动的呢？这里主要涉及两个地方：</description>
    </item>
    
  </channel>
</rss>