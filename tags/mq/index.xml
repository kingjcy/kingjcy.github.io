<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mq on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/mq/</link>
    <description>Recent content in Mq on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Thu, 19 Mar 2020 19:54:48 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/mq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Activemq</title>
      <link>https://kingjcy.github.io/post/middleware/mq/emq/</link>
      <pubDate>Thu, 19 Mar 2020 19:54:48 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/mq/emq/</guid>
      <description>EMQ X (Erlang/Enterprise/Elastic MQTT Broker) 是基于 Erlang/OTP 平台开发的开源物联网 MQTT 消息服务器。
Erlang/OTP是出色的软实时 (Soft-Realtime)、低延时 (Low-Latency)、分布式 (Distributed)的语言平台。
MQTT 是轻量的 (Lightweight)、发布订阅模式 (PubSub) 的物联网消息协议。
EMQ X 设计目标是实现高可靠，并支持承载海量物联网终端的MQTT连接，支持在海量物联网设备间低延时消息路由:
稳定承载大规模的 MQTT 客户端连接，单服务器节点支持50万到100万连接。 分布式节点集群，快速低延时的消息路由，单集群支持1000万规模的路由。 消息服务器内扩展，支持定制多种认证方式、高效存储消息到后端数据库。 完整物联网协议支持，MQTT、MQTT-SN、CoAP、LwM2M、WebSocket 或私有协议支持。  </description>
    </item>
    
    <item>
      <title>消息队列系列---- Kafka Client</title>
      <link>https://kingjcy.github.io/post/middleware/mq/kafka-client/</link>
      <pubDate>Thu, 08 Aug 2019 15:49:11 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/mq/kafka-client/</guid>
      <description>&lt;p&gt;Go Kafka客户端简单示例&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Mq Compare</title>
      <link>https://kingjcy.github.io/post/middleware/mq/mq-compare/</link>
      <pubDate>Sat, 21 Apr 2018 09:54:56 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/mq/mq-compare/</guid>
      <description>&lt;p&gt;因为模样实际全部使用的对比经验，这边不多做评价，结合网上的使用情况。仅供参考。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rocketmq</title>
      <link>https://kingjcy.github.io/post/middleware/mq/rocketmq/</link>
      <pubDate>Wed, 28 Mar 2018 21:26:44 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/mq/rocketmq/</guid>
      <description>&lt;p&gt;RocketMQ 是阿里巴巴在2012年开源的分布式消息中间件，目前已经捐赠给 Apache 软件基金会，并于2017年9月25日成为 Apache 的顶级项目。作为经历过多次阿里巴巴双十一这种“超级工程”的洗礼并有稳定出色表现的国产中间件，以其高性能、低延时和高可靠等特性近年来已经也被越来越多的国内企业使用。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Activemq</title>
      <link>https://kingjcy.github.io/post/middleware/mq/activemq/</link>
      <pubDate>Mon, 19 Mar 2018 19:54:48 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/mq/activemq/</guid>
      <description>&lt;p&gt;ActiveMQ是Apache软件基金下的一个开源软件，它遵循JMS规范（Java Message Service），是消息驱动中间件软件（MOM）。它为企业消息传递提供高可用，出色性能，可扩展，稳定和安全保障。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>消息队列系列---- Kafka</title>
      <link>https://kingjcy.github.io/post/middleware/mq/kafka/</link>
      <pubDate>Wed, 19 Jul 2017 20:21:50 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/mq/kafka/</guid>
      <description>&lt;p&gt;Apache Kafka由著名职业社交公司LinkedIn开发，最初是被设计用来解决LinkedIn公司内部海量日志传输等问题。Kafka使用Scala语言编写，于2011年开源并进入Apache孵化器，2012年10月正式毕业，现在为Apache顶级项目。&lt;/p&gt;

&lt;p&gt;Kafka是一个分布式数据流平台，可以运行在单台服务器上，也可以在多台服务器上部署形成集群。它提供了发布和订阅功能，使用者可以发送数据到Kafka中，也可以从Kafka中读取数据（以便进行后续的处理）。Kafka具有高吞吐、低延迟、高容错等特点。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nsq Principle</title>
      <link>https://kingjcy.github.io/post/middleware/mq/nsq-principle/</link>
      <pubDate>Tue, 20 Jun 2017 20:22:38 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/mq/nsq-principle/</guid>
      <description>&lt;p&gt;nsq的原理解析&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Nsq</title>
      <link>https://kingjcy.github.io/post/middleware/mq/nsq/</link>
      <pubDate>Mon, 19 Jun 2017 20:21:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/middleware/mq/nsq/</guid>
      <description>&lt;p&gt;NSQ是一个基于Go语言的分布式实时消息平台，它基于MIT开源协议发布，由bitly公司开源出来的一款简单易用的消息中间件。&lt;/p&gt;

&lt;p&gt;NSQ可用于大规模系统中的实时消息服务，并且每天能够处理数亿(十亿)级别的消息，其设计目标是为在分布式环境下运行的去中心化服务提供一个强大的基础架构。&lt;/p&gt;

&lt;p&gt;NSQ具有分布式、去中心化的拓扑结构，该结构具有无单点故障、故障容错、高可用性以及能够保证消息的可靠传递的特征。NSQ非常容易配置和部署，且具有最大的灵活性，支持众多消息协议。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>