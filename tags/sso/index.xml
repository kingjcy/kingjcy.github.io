<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sso on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/sso/</link>
    <description>Recent content in Sso on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Wed, 07 Sep 2016 09:25:55 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/sso/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sso</title>
      <link>https://kingjcy.github.io/post/architecture/sso/</link>
      <pubDate>Wed, 07 Sep 2016 09:25:55 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/sso/</guid>
      <description>sso+ldap
基础模式 SSO 访问流程主要有以下步骤：
 访问服务： SSO 客户端发送请求访问应用系统提供的服务资源。
 定向认证： SSO 客户端会重定向用户请求到 SSO 服务器。
 用户认证：用户身份认证。
 发放票据： SSO 服务器会产生一个随机的 Service Ticket 。
 验证票据： SSO 服务器验证票据 Service Ticket 的合法性，验证通过后，允许客户端访问服务。
 传输用户信息： SSO 服务器验证票据通过后，传输用户认证结果信息给客户端。
  单点登录SSO（Single Sign On）说得简单点就是在一个多系统共存的环境下，用户在一处登录后，就不用在其他系统中登录，也就是用户的一次登录能得到其他所有系统的信任。单点登录在大型网站里使用得非常频繁，例如像阿里巴巴这样的网站，在网站的背后是成百上千的子系统，用户一次操作或交易可能涉及到几十个子系统的协作，如果每个子系统都需要用户认证，不仅用户会疯掉，各子系统也会为这种重复认证授权的逻辑搞疯掉。
怎么使用LDAP这个术语呢？ 在日常交谈中，你可能会听到有些人这么说：&amp;rdquo;我们要把那些东西存在LDAP中吗？&amp;rdquo;，或者&amp;rdquo;从LDAP数据库中取出那些数据！&amp;rdquo;，又或者&amp;rdquo;我们怎么把LDAP和关系型数据库集成在一起？&amp;rdquo;。严格地说，LDAP根本不是数据库而是用来访问存储在信息目录（也就是LDAP目录）中的信息的协议。更为确切和正式的说法应该是象这样的：&amp;rdquo;通过使用LDAP，可以在信息目录的正确位置读取（或存储）数据&amp;rdquo;。但是，也没有必要吹毛求疵，尽管表达得不够准确，我们也都知道对方在说什么。
 LDAP目录是数据库吗？  　就象Sybase、Oracle、Informix或Microsoft的数据库管理系统（DBMS）是用于处理查询和更新关系型数据库那样，LDAP服务器也是用来处理查询和更新LDAP目录的。换句话来说LDAP目录也是一种类型的数据库，但是不是关系型数据库。不象被设计成每分钟需要处理成百上千条数据变化的数据库，例如：在电子商务中经常用到的在线交易处理（OLTP）系统，LDAP主要是优化数据读取的性能。
LDAP最大的优势是：可以在任何计算机平台上，用很容易获得的而且数目不断增加的LDAP的客户端程序访问LDAP目录。而且也很容易定制应用程序为它加上LDAP的支持。 LDAP协议是跨平台的和标准的协议，因此应用程序就不用为LDAP目录放在什么样的服务器上操心了。
LDAP对于这样存储这样的信息最为有用，也就是数据需要从不同的地点读取，但是不需要经常更新。例如，这些信息存储在LDAP目录中是十分有效的： l 公司员工的电话号码簿和组织结构图 l 客户的联系信息 l 计算机管理需要的信息，包括NIS映射、email假名，等等 l 软件包的配置信息 l 公用证书和安全密匙
什么时候该用LDAP存储数据？ 大多数的LDAP服务器都为读密集型的操作进行专门的优化。因此，当从LDAP服务器中读取数据的时候会比从专门为OLTP优化的关系型数据库中读取数据快一个数量级。也是因为专门为读的性能进行优化，大多数的LDAP目录服务器并不适合存储需要需要经常改变的数据。例如，用LDAP服务器来存储电话号码是一个很好的选择，但是它不能作为电子商务站点的数据库服务器。
Cookie不安全，是客户端浏览器中缓存的数据，所以不能跨域免登</description>
    </item>
    
  </channel>
</rss>