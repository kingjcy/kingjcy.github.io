<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/architecture/</link>
    <description>Recent content in Architecture on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Mon, 09 Nov 2020 19:25:10 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>架构系列---- 并发</title>
      <link>https://kingjcy.github.io/post/architecture/concurrence/</link>
      <pubDate>Mon, 09 Nov 2020 19:25:10 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/concurrence/</guid>
      <description>&lt;p&gt;高并发（High Concurrency）是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证系统能够同时并行处理很多请求。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- Architecture 总结</title>
      <link>https://kingjcy.github.io/post/architecture/architecture/</link>
      <pubDate>Thu, 05 Nov 2020 10:04:53 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/architecture/</guid>
      <description>&lt;p&gt;架构就是解决问题给出的整体技术方案，既要掌握整体，也要知道局部瓶颈能够解决具体业务的方案。&lt;/p&gt;

&lt;p&gt;架构师，是一个既需要掌控整体又需要洞悉局部瓶颈并依据具体的业务场景给出解决方案的团队领导型人物。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 企业架构</title>
      <link>https://kingjcy.github.io/post/architecture/enterprise-architecture/</link>
      <pubDate>Fri, 04 Sep 2020 14:38:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/enterprise-architecture/</guid>
      <description>&lt;p&gt;重下往上：基础平台，应用&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 计数系统</title>
      <link>https://kingjcy.github.io/post/architecture/count/</link>
      <pubDate>Mon, 04 May 2020 14:38:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/count/</guid>
      <description>&lt;p&gt;很多业务都有“计数”需求，在业务复杂，计数扩展频繁，数据量大，并发量大的情况下，计数系统的架构演进与实践。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 架构的演进</title>
      <link>https://kingjcy.github.io/post/architecture/architecture-evolution/</link>
      <pubDate>Thu, 05 Mar 2020 19:11:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/architecture-evolution/</guid>
      <description>&lt;p&gt;随着计算机软件的发展，不同的应用在落地，应用架构随着规模的越来越大，也在一步步的进行演进，从最初的单体架构，到后来的集群，然后分布式架构一步步的发展着。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 电商购物系统</title>
      <link>https://kingjcy.github.io/post/architecture/shopping/</link>
      <pubDate>Tue, 04 Feb 2020 14:38:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/shopping/</guid>
      <description>&lt;p&gt;电商购物系统算是目前软件技术落地的很大的一个发展方向，主要以阿里为主导的电商购物系统占据整个行业的半壁江山，是直接和价值挂钩的重要业务方向。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 架构解耦</title>
      <link>https://kingjcy.github.io/post/architecture/coupling/</link>
      <pubDate>Sun, 05 Jan 2020 10:04:53 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/coupling/</guid>
      <description>&lt;p&gt;自身服务的变动，需要其他依赖服务跟着升级变更，这就叫服务耦合，比如数据库换了一个ip，此时往往连接此数据库的上游需要修改配置重启，明明换ip的是你，凭什么配合重启的却是我？这就是一种典型的架构设计上“反向依赖”的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 搜索系统</title>
      <link>https://kingjcy.github.io/post/architecture/search/</link>
      <pubDate>Sat, 04 Jan 2020 14:38:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/search/</guid>
      <description>&lt;p&gt;搜索系统在我们日常生活中经常使用，比如baidu，google等，我们来看看其架构和原理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 常用ID生成的方法</title>
      <link>https://kingjcy.github.io/post/architecture/id/</link>
      <pubDate>Wed, 16 Oct 2019 10:04:53 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/id/</guid>
      <description>&lt;p&gt;几乎所有的业务系统，都有生成一个记录标识的需求，全局唯一，趋势有序是记录标识生成的两大核心需求。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 调用优化</title>
      <link>https://kingjcy.github.io/post/architecture/call/</link>
      <pubDate>Sat, 05 Oct 2019 10:04:53 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/call/</guid>
      <description>&lt;p&gt;第三方接口挂掉，最好是不影响我们自身服务的运行，但是我们没有办法控制第三方接口稳定，所以我们需要优化我们的调用架构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 推荐系统</title>
      <link>https://kingjcy.github.io/post/architecture/recommend/</link>
      <pubDate>Thu, 04 Jul 2019 14:38:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/recommend/</guid>
      <description>&lt;p&gt;推荐系统主要依赖于算法，是将大数据进行分析后得到一个想要结果，进行评分推荐，其实和搜索系统有异曲同工之妙。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- Cache</title>
      <link>https://kingjcy.github.io/post/architecture/cache/</link>
      <pubDate>Sat, 15 Jun 2019 20:09:52 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/cache/</guid>
      <description>&lt;p&gt;缓存是一种提高系统读性能的常见技术，对于读多写少的应用场景，我们经常使用缓存来进行优化。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 冗余表</title>
      <link>https://kingjcy.github.io/post/architecture/redundanttable/</link>
      <pubDate>Fri, 14 Jun 2019 14:38:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/redundanttable/</guid>
      <description>&lt;p&gt;冗余表的架构设计就是牺牲空间一份数据存多张表，可以通过不同索引查询提高效率的一种架构思想。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 中台建设</title>
      <link>https://kingjcy.github.io/post/architecture/electronic-commerce/</link>
      <pubDate>Tue, 04 Jun 2019 14:38:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/electronic-commerce/</guid>
      <description>&lt;p&gt;中台建设其实就是将一些能够统一的业务进行统一规划，所以系统的接入和流出都是标准化的操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 广告投放系统</title>
      <link>https://kingjcy.github.io/post/architecture/advertising/</link>
      <pubDate>Tue, 04 Jun 2019 14:38:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/advertising/</guid>
      <description>&lt;p&gt;互联网智能广告系统简易流程与架构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 微服务</title>
      <link>https://kingjcy.github.io/post/architecture/microservices/microservices/</link>
      <pubDate>Mon, 05 Mar 2018 19:11:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/microservices/microservices/</guid>
      <description>&lt;p&gt;微服务其实就是服务化的一种概念，由过去单体架构演变成分布式系统的一个产物。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UML</title>
      <link>https://kingjcy.github.io/post/architecture/map/uml/</link>
      <pubDate>Wed, 08 Nov 2017 11:40:49 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/map/uml/</guid>
      <description>&lt;p&gt;UML（Unified Modeling Language）是一种统一建模语言，为面向对象开发系统的产品进行说明、可视化、和编制文档的一种标准语言。下面将对UML的九种图的基本概念进行介绍以及各个图的使用场景。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 并发安全</title>
      <link>https://kingjcy.github.io/post/architecture/concurrencesafe/</link>
      <pubDate>Sun, 09 Apr 2017 19:25:10 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/concurrencesafe/</guid>
      <description>&lt;p&gt;并发安全，就是多个并发体在同一段时间内访问同一个共享数据，共享数据能被正确处理。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>