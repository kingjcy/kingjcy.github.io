<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on kingjcy blog</title>
    <link>https://kingjcy.github.io/tags/architecture/</link>
    <description>Recent content in Architecture on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Thu, 05 Nov 2020 10:04:53 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/tags/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>架构系列---- Architecture 总结</title>
      <link>https://kingjcy.github.io/post/architecture/architecture/</link>
      <pubDate>Thu, 05 Nov 2020 10:04:53 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/architecture/</guid>
      <description>&lt;p&gt;架构就是解决问题给出的整体技术方案，既要掌握整体，也要知道局部瓶颈能够解决具体业务的方案。&lt;/p&gt;

&lt;p&gt;架构师，是一个既需要掌控整体又需要洞悉局部瓶颈并依据具体的业务场景给出解决方案的团队领导型人物。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 架构解耦</title>
      <link>https://kingjcy.github.io/post/architecture/coupling/</link>
      <pubDate>Sun, 05 Jan 2020 10:04:53 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/coupling/</guid>
      <description>&lt;p&gt;自身服务的变动，需要其他依赖服务跟着升级变更，这就叫服务耦合，比如数据库换了一个ip，此时往往连接此数据库的上游需要修改配置重启，明明换ip的是你，凭什么配合重启的却是我？这就是一种典型的架构设计上“反向依赖”的问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 微服务</title>
      <link>https://kingjcy.github.io/post/architecture/microservices/microservices/</link>
      <pubDate>Mon, 05 Mar 2018 19:11:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/microservices/microservices/</guid>
      <description>&lt;p&gt;微服务其实就是服务化的一种概念，由过去单体架构演变成分布式系统的一个产物。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UML</title>
      <link>https://kingjcy.github.io/post/architecture/map/uml/</link>
      <pubDate>Wed, 08 Nov 2017 11:40:49 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/map/uml/</guid>
      <description>&lt;p&gt;UML（Unified Modeling Language）是一种统一建模语言，为面向对象开发系统的产品进行说明、可视化、和编制文档的一种标准语言。下面将对UML的九种图的基本概念进行介绍以及各个图的使用场景。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 并发安全</title>
      <link>https://kingjcy.github.io/post/architecture/concurrencesafe/</link>
      <pubDate>Sun, 09 Apr 2017 19:25:10 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/concurrencesafe/</guid>
      <description>&lt;p&gt;并发安全，就是多个并发体在同一段时间内访问同一个共享数据，共享数据能被正确处理。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>