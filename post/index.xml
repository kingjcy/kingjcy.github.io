<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on kingjcy blog</title>
    <link>https://kingjcy.github.io/post/</link>
    <description>Recent content in Posts on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Tue, 25 Dec 2018 14:27:45 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang使用系列---- Bufio</title>
      <link>https://kingjcy.github.io/post/golang/go-bufio/</link>
      <pubDate>Tue, 25 Dec 2018 14:27:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-bufio/</guid>
      <description>&lt;p&gt;bufio 包实现了缓存IO。它包装了 io.Reader 和 io.Writer 对象，创建了另外的Reader和Writer对象，它们也实现了 io.Reader 和 io.Writer 接口，不过它们是有缓存的。该包同时为文本I/O提供了一些便利操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Bytes</title>
      <link>https://kingjcy.github.io/post/golang/go-bytes/</link>
      <pubDate>Mon, 25 Dec 2017 14:28:17 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-bytes/</guid>
      <description>&lt;p&gt;该包定义了一些操作 byte slice 的便利操作。因为字符串可以表示为 []byte，因此，bytes 包定义的函数、方法等和 strings 包很类似，所以讲解时会和 strings 包类似甚至可以直接参考。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UML</title>
      <link>https://kingjcy.github.io/post/architecture/map/uml/</link>
      <pubDate>Wed, 08 Nov 2017 11:40:49 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/map/uml/</guid>
      <description>&lt;p&gt;UML（Unified Modeling Language）是一种统一建模语言，为面向对象开发系统的产品进行说明、可视化、和编制文档的一种标准语言。下面将对UML的九种图的基本概念进行介绍以及各个图的使用场景。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Net/Http 应用层</title>
      <link>https://kingjcy.github.io/post/golang/go-net-http/</link>
      <pubDate>Tue, 26 Sep 2017 17:05:22 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-net-http/</guid>
      <description>&lt;p&gt;http包提供了HTTP协议的客户端和服务端的实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Strings</title>
      <link>https://kingjcy.github.io/post/golang/go-strings/</link>
      <pubDate>Wed, 12 Oct 2016 19:37:30 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-strings/</guid>
      <description>&lt;p&gt;平时在开发过程中， 和字符串打交道还是比较多的，比如分割， 去除， 替换等等常用的方法， 这些都是由strings包来提供的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Io</title>
      <link>https://kingjcy.github.io/post/golang/go-io/</link>
      <pubDate>Sat, 30 Jul 2016 20:39:03 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-io/</guid>
      <description>&lt;p&gt;io包提供了所有需要交互的输入输出模式的基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Go Net 协议层</title>
      <link>https://kingjcy.github.io/post/golang/go-net/</link>
      <pubDate>Mon, 11 Jul 2016 17:34:34 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-net/</guid>
      <description>&lt;p&gt;网络编程是go语言使用的一个核心模块。golang的网络封装使用对于底层socket或者上层的http，甚至是web服务都很友好。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Os</title>
      <link>https://kingjcy.github.io/post/golang/go-os/</link>
      <pubDate>Thu, 02 Jun 2016 09:52:35 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-os/</guid>
      <description>&lt;p&gt;os包中实现了不依赖平台的操作系统函数接口(平台无关的接口)，设计向Unix风格，但是错误处理是go风格，当os包使用时，如果失败之后返回错误类型而不是错误数量,返回错误值而非错误码,可以包含更多信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用hugo&#43;github构建自己的blog</title>
      <link>https://kingjcy.github.io/post/tool/hugo-blog-build/</link>
      <pubDate>Fri, 29 Aug 2014 09:29:40 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/tool/hugo-blog-build/</guid>
      <description>&lt;p&gt;这个是我用hugo+github搭建起个人blog写的第一篇文章，有点小兴奋。。。首先把搭建测过程写起来和大家分享一下吧。&lt;/p&gt;

&lt;p&gt;首先，作为一个程序员，不拥有自己搭建的blog，而去用别人搭建好的去注册一下，我是无法接受的！！搭建个人blog需要两个东西：&lt;/p&gt;

&lt;p&gt;1、静态网页生成器，有jekyll，hexo，hugo等，由于最近在玩go语言，所以就选择了hugo，其他的也没有深入了解，后面搭建起来，发现hugo还是比较简单。&lt;/p&gt;

&lt;p&gt;2、github pages 这个是github提供的一个托管工作，相当好用。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>