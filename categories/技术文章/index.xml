<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术文章 on kingjcy blog</title>
    <link>https://kingjcy.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/</link>
    <description>Recent content in 技术文章 on kingjcy blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2020. All rights reserved.</copyright>
    <lastBuildDate>Sat, 18 Jan 2020 19:45:30 +0800</lastBuildDate>
    
	<atom:link href="https://kingjcy.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>监控日志系列---- loki</title>
      <link>https://kingjcy.github.io/post/monitor/log/loki/loki/</link>
      <pubDate>Sat, 18 Jan 2020 19:45:30 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/log/loki/loki/</guid>
      <description>&lt;p&gt;Loki是 Grafana Labs 团队最新的开源项目，是一个水平可扩展，高可用性，多租户的日志聚合系统。它的设计非常经济高效且易于操作，因为它不会为日志内容编制索引，而是为每个日志流编制一组标签，为 Prometheus和 Kubernetes用户做了相关优化。项目受 Prometheus 启发，类似于 Prometheus 的日志系统。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系列----VictoriaMetrics</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/prometheus/cluster/victoriametrics/</link>
      <pubDate>Thu, 13 Jun 2019 16:19:46 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/prometheus/cluster/victoriametrics/</guid>
      <description>&lt;p&gt;VictoriaMetrics是一个高性能的，长期存储的prometheus的远程解决方案，实现集群使用的federation的方式，只不过性能很优秀，包括write和query，聚合数据也解决了查询问题。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系列---- Cortex</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/prometheus/cluster/remotestore/cortex/</link>
      <pubDate>Thu, 13 Jun 2019 14:28:39 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/prometheus/cluster/remotestore/cortex/</guid>
      <description>&lt;p&gt;crotex是一个为了支持prometheus扩展的服务，支持水平扩展，高可用，多租户，长期存储。主要开发者也是promehteus的开发者&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系列---- M3db</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/prometheus/cluster/remotestore/m3db/</link>
      <pubDate>Wed, 13 Mar 2019 17:13:10 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/prometheus/cluster/remotestore/m3db/</guid>
      <description>&lt;p&gt;Uber开发了指标平台M3和分布式时间序列数据库M3DB。来解决Uber在发展过程当中遇到的问题：使用开源软件后，因为可靠性，成本等问题，在操做密集型方面没法大规模使用这些开源软件。因此Uber逐步构建了本身的指标平台。咱们利用经验来帮助咱们构建本地分布式时间序列数据库，高度动态和高性能的聚合服务，查询引擎以及其余支持基础架构。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Sync</title>
      <link>https://kingjcy.github.io/post/golang/go-sync/</link>
      <pubDate>Thu, 28 Feb 2019 17:42:24 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-sync/</guid>
      <description>&lt;p&gt;sync包提供了基本的同步基元，如锁，WaitGroup、Once 和 Cond等同步原语。除了Once和WaitGroup类型，大部分都是适用于普通程序线程，大型并发同步使用channel通信（csp）更好一些。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang使用系列---- Map</title>
      <link>https://kingjcy.github.io/post/golang/go-map/</link>
      <pubDate>Thu, 28 Feb 2019 17:42:24 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-map/</guid>
      <description>&lt;p&gt;map是我们经常使用的一种数据结构，也是很重要的一种数据结构，我们来详细的了解一下map。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>数据库系列---- Elasticsearch</title>
      <link>https://kingjcy.github.io/post/database/elasticsearch/</link>
      <pubDate>Thu, 21 Feb 2019 19:28:32 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/database/elasticsearch/</guid>
      <description>&lt;p&gt;开源的 Elasticsearch （以下简称 Elastic）是目前全文搜索引擎的首选。它可以快速地储存、搜索和分析海量数据。并且支持分布式，解决Lucene（支持全文索引的数据库系统）单机问题，目前维基百科、Stack Overflow、Github 都采用它。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Bufio</title>
      <link>https://kingjcy.github.io/post/golang/go-bufio/</link>
      <pubDate>Tue, 25 Dec 2018 14:27:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-bufio/</guid>
      <description>&lt;p&gt;bufio 包实现了缓存IO。它包装了 io.Reader 和 io.Writer 对象，创建了另外的Reader和Writer对象，它们也实现了 io.Reader 和 io.Writer 接口，不过它们是有缓存的。该包同时为文本I/O提供了一些便利操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控系列---- log</title>
      <link>https://kingjcy.github.io/post/monitor/log/log-scheme/</link>
      <pubDate>Mon, 13 Aug 2018 11:16:45 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/log/log-scheme/</guid>
      <description>&lt;p&gt;日志是设备或者程序对自身状态和运作行为的记录，日志监控平台是包括日志采集，存储，分析，索引查询，告警以及各种流程管理的一站式日志服务，日志监控是监控体系中核心的建设，而且可以说是量最大的一项监控。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系统---- Thanos</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/prometheus/cluster/thanos/</link>
      <pubDate>Fri, 13 Jul 2018 17:14:15 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/prometheus/cluster/thanos/</guid>
      <description>&lt;p&gt;Thanos，一组通过跨集群联合、跨集群无限存储和全局查询为Prometheus 增加高可用性的组件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控日志系列---- Filebeat</title>
      <link>https://kingjcy.github.io/post/monitor/log/collect/filebeat/filebeat/</link>
      <pubDate>Sun, 08 Jul 2018 19:45:30 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/log/collect/filebeat/filebeat/</guid>
      <description>&lt;p&gt;Filebeat 是使用 Golang 实现的轻量型日志采集器，是基于原先 logstash-forwarder 的源码改造出来的，没有任何依赖，可以单独存在的搞性能采集工具。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控日志系列---- Filebeat原理</title>
      <link>https://kingjcy.github.io/post/monitor/log/collect/filebeat/filebeat-principle/</link>
      <pubDate>Sun, 08 Jul 2018 19:45:30 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/log/collect/filebeat/filebeat-principle/</guid>
      <description>&lt;p&gt;Filebeat 是使用 Golang 实现的轻量型日志采集器，也是 Elasticsearch stack 里面的一员。本质上是一个 agent，可以安装在各个节点上，根据配置读取对应位置的日志，并上报到相应的地方去。&lt;/p&gt;

&lt;p&gt;filebeat源码归属于beats项目，而beats项目的设计初衷是为了采集各类的数据，所以beats抽象出了一个libbeat库，基于libbeat我们可以快速的开发实现一个采集的工具，除了filebeat，还有像metricbeat、packetbeat等官方的项目也是在beats工程中。libbeat已经实现了内存缓存队列memqueue、几种output日志发送客户端，数据的过滤处理processor,配置解析、日志打印、事件处理和发送等通用功能，而filebeat只需要实现日志文件的读取等和日志相关的逻辑即可。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控日志系列---- 容器日志采集方案</title>
      <link>https://kingjcy.github.io/post/monitor/log/collect/collect-scheme/</link>
      <pubDate>Sun, 08 Jul 2018 19:45:30 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/log/collect/collect-scheme/</guid>
      <description>&lt;p&gt;容器由于其特殊性，在日志采集上有着不同的解决方案，目前主要还是以探针采集为主。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系列---- Prometheus Operator</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/prometheus/prometheus-operater/</link>
      <pubDate>Tue, 12 Jun 2018 16:57:05 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/prometheus/prometheus-operater/</guid>
      <description>&lt;p&gt;Prometheus-Operator是一套为了方便整合prometheus和kubernetes的开源方案，使用Prometheus-Operator可以非常简单的在kubernetes集群中部署Prometheus服务，用户能够使用简单的声明性配置来配置和管理Prometheus实例，这些配置将响应、创建、配置和管理Prometheus监控实例。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Ioutil</title>
      <link>https://kingjcy.github.io/post/golang/go-ioutil/</link>
      <pubDate>Sat, 13 Jan 2018 11:04:07 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-ioutil/</guid>
      <description>&lt;p&gt;ioutil主要是提供了一些常用、方便的IO操作函数。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Bytes</title>
      <link>https://kingjcy.github.io/post/golang/go-bytes/</link>
      <pubDate>Mon, 25 Dec 2017 14:28:17 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-bytes/</guid>
      <description>&lt;p&gt;该包定义了一些操作 byte slice 的便利操作。因为字符串可以表示为 []byte，因此，bytes 包定义的函数、方法等和 strings 包很类似，所以讲解时会和 strings 包类似甚至可以直接参考。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系列---- zabbix源码阅读</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/zabbix/zabbixcode/</link>
      <pubDate>Sat, 25 Nov 2017 09:52:47 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/zabbix/zabbixcode/</guid>
      <description>&lt;p&gt;阅读源码，解析基本原理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UML</title>
      <link>https://kingjcy.github.io/post/architecture/map/uml/</link>
      <pubDate>Wed, 08 Nov 2017 11:40:49 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/map/uml/</guid>
      <description>&lt;p&gt;UML（Unified Modeling Language）是一种统一建模语言，为面向对象开发系统的产品进行说明、可视化、和编制文档的一种标准语言。下面将对UML的九种图的基本概念进行介绍以及各个图的使用场景。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Net/Http 应用层</title>
      <link>https://kingjcy.github.io/post/golang/go-net-http/</link>
      <pubDate>Tue, 26 Sep 2017 17:05:22 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-net-http/</guid>
      <description>&lt;p&gt;http包提供了HTTP协议的客户端和服务端的实现。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系列---- Prometheus入门</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/prometheus/prometheus/</link>
      <pubDate>Thu, 29 Jun 2017 16:31:54 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/prometheus/prometheus/</guid>
      <description>&lt;p&gt;Prometheus，它最早是借鉴了 Google 的 Borgmon 系统，完全是开源的，也是CNCF 下继 K8S 之后第二个项目。它们的开发人员都是原 Google 的 SRE，通过 HTTP 的方式来做数据收集，对其最深远的应该是其被设计成一个 self sustained 的系统，也就是说它是完全独立的系统，不需要外部依赖。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>架构系列---- 并发安全</title>
      <link>https://kingjcy.github.io/post/architecture/concurrencesafe/</link>
      <pubDate>Sun, 09 Apr 2017 19:25:10 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/architecture/concurrencesafe/</guid>
      <description>&lt;p&gt;并发安全，就是多个并发体在同一段时间内访问同一个共享数据，共享数据能被正确处理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系列---- Zabbix基本使用</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/zabbix/zabbix/</link>
      <pubDate>Sat, 04 Mar 2017 17:54:04 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/zabbix/zabbix/</guid>
      <description>&lt;p&gt;zabbix是目前各大互联网公司使用最广泛的开源监控之一,其历史最早可追溯到1998年,在业内拥有各种成熟的解决方案.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Strings</title>
      <link>https://kingjcy.github.io/post/golang/go-strings/</link>
      <pubDate>Wed, 12 Oct 2016 19:37:30 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-strings/</guid>
      <description>&lt;p&gt;平时在开发过程中， 和字符串打交道还是比较多的，比如分割， 去除， 替换等等常用的方法， 这些都是由strings包来提供的。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Strconv</title>
      <link>https://kingjcy.github.io/post/golang/go-strconv/</link>
      <pubDate>Wed, 12 Oct 2016 19:33:24 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-strconv/</guid>
      <description>&lt;p&gt;strconv包实现了基本数据类型和其字符串表示的相互转换。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Io</title>
      <link>https://kingjcy.github.io/post/golang/go-io/</link>
      <pubDate>Sat, 30 Jul 2016 20:39:03 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-io/</guid>
      <description>&lt;p&gt;io包提供了所有需要交互的输入输出模式的基础。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Go Net 协议层</title>
      <link>https://kingjcy.github.io/post/golang/go-net/</link>
      <pubDate>Mon, 11 Jul 2016 17:34:34 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-net/</guid>
      <description>&lt;p&gt;网络编程是go语言使用的一个核心模块。golang的网络封装使用对于底层socket或者上层的http，甚至是web服务都很友好。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Os</title>
      <link>https://kingjcy.github.io/post/golang/go-os/</link>
      <pubDate>Thu, 02 Jun 2016 09:52:35 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-os/</guid>
      <description>&lt;p&gt;os包中实现了不依赖平台的操作系统函数接口(平台无关的接口)，设计向Unix风格，但是错误处理是go风格，当os包使用时，如果失败之后返回错误类型而不是错误数量,返回错误值而非错误码,可以包含更多信息。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang使用系列---- Fmt</title>
      <link>https://kingjcy.github.io/post/golang/go-fmt/</link>
      <pubDate>Mon, 30 May 2016 11:57:05 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-fmt/</guid>
      <description>&lt;p&gt;fmt是实现了格式化的I/O函数，这点类似Ｃ语言中的printf和scanf，但是更加简单。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang使用系列---- Time</title>
      <link>https://kingjcy.github.io/post/golang/go-time/</link>
      <pubDate>Tue, 12 Apr 2016 20:11:01 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/golang/go-time/</guid>
      <description>&lt;p&gt;time包中包括两类时间：时间点（某一时刻）和时长（某一段时间）的基本操作。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>监控metrics系列---- Zabbix监控方案</title>
      <link>https://kingjcy.github.io/post/monitor/metrics/zabbix/zabbix-scheme/</link>
      <pubDate>Fri, 04 Mar 2016 17:54:04 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/monitor/metrics/zabbix/zabbix-scheme/</guid>
      <description>&lt;p&gt;zabbix是目前各大互联网公司使用最广泛的开源监控之一,其历史最早可追溯到1998年,在业内拥有各种成熟的解决方案，但是对容器的监控还是比较薄弱，我们也不多说，主要用于基础设施VM的监控。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>用hugo&#43;github构建自己的blog</title>
      <link>https://kingjcy.github.io/post/tool/hugo-blog-build/</link>
      <pubDate>Fri, 29 Aug 2014 09:29:40 +0800</pubDate>
      
      <guid>https://kingjcy.github.io/post/tool/hugo-blog-build/</guid>
      <description>&lt;p&gt;这个是我用hugo+github搭建起个人blog写的第一篇文章，有点小兴奋。。。首先把搭建测过程写起来和大家分享一下吧。&lt;/p&gt;

&lt;p&gt;首先，作为一个程序员，不拥有自己搭建的blog，而去用别人搭建好的去注册一下，我是无法接受的！！搭建个人blog需要两个东西：&lt;/p&gt;

&lt;p&gt;1、静态网页生成器，有jekyll，hexo，hugo等，由于最近在玩go语言，所以就选择了hugo，其他的也没有深入了解，后面搭建起来，发现hugo还是比较简单。&lt;/p&gt;

&lt;p&gt;2、github pages 这个是github提供的一个托管工作，相当好用。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>